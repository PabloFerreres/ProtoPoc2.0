{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferreres\\\\PycharmProjects\\\\ProtoPoC\\\\frontend\\\\src\\\\MasterTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-alpine.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MasterTable = () => {\n  _s();\n  const [rowData, setRowData] = useState([]);\n  const gridRef = useRef();\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/master\").then(res => {\n      setRowData(res.data);\n    });\n  }, []);\n  const columnDefs = rowData[0] ? Object.keys(rowData[0]).map(key => {\n    if (key === \"Revision\") {\n      return {\n        field: key,\n        editable: false\n      };\n    }\n    if (key === \"Magische-Relevanz\") {\n      return {\n        field: key,\n        editable: true,\n        cellEditor: \"agSelectCellEditor\",\n        cellEditorParams: {\n          values: [\"\", \"M\", \"MS\"]\n        }\n      };\n    }\n    return {\n      field: key,\n      editable: true\n    };\n  }) : [];\n  const handleSave = () => {\n    if (!gridRef.current) return;\n    const updatedRows = gridRef.current.api.getDisplayedRowCount();\n    for (let i = 0; i < updatedRows; i++) {\n      const rowNode = gridRef.current.api.getDisplayedRowAtIndex(i);\n      const data = rowNode.data;\n      axios.post(\"http://localhost:8000/update_master_row\", data).then(res => {\n        console.log(\"Masterdatensatz gespeichert:\", res.data);\n      });\n    }\n    alert(\"Masterdaten gespeichert.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mastertabelle \\u2013 Bauteile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      ref: gridRef,\n      rowData: rowData,\n      columnDefs: columnDefs,\n      defaultColDef: {\n        resizable: true,\n        sortable: true,\n        filter: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      style: {\n        marginTop: 16\n      },\n      children: \"\\uD83D\\uDCBE \\xC4nderungen speichern\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MasterTable, \"W0PRkppMbIs6WkLa0t+gKzrvlrQ=\");\n_c = MasterTable;\nexport default MasterTable;\nvar _c;\n$RefreshReg$(_c, \"MasterTable\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","AgGridReact","jsxDEV","_jsxDEV","MasterTable","_s","rowData","setRowData","gridRef","get","then","res","data","columnDefs","Object","keys","map","key","field","editable","cellEditor","cellEditorParams","values","handleSave","current","updatedRows","api","getDisplayedRowCount","i","rowNode","getDisplayedRowAtIndex","post","console","log","alert","className","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","defaultColDef","resizable","sortable","filter","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/ferreres/PycharmProjects/ProtoPoC/frontend/src/MasterTable.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-alpine.css\";\n\nconst MasterTable = () => {\n  const [rowData, setRowData] = useState([]);\n  const gridRef = useRef();\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/master\").then((res) => {\n      setRowData(res.data);\n    });\n  }, []);\n\n  const columnDefs = rowData[0]\n    ? Object.keys(rowData[0]).map((key) => {\n        if (key === \"Revision\") {\n          return { field: key, editable: false };\n        }\n        if (key === \"Magische-Relevanz\") {\n          return {\n            field: key,\n            editable: true,\n            cellEditor: \"agSelectCellEditor\",\n            cellEditorParams: {\n              values: [\"\", \"M\", \"MS\"]\n            }\n          };\n        }\n        return { field: key, editable: true };\n      })\n    : [];\n\n  const handleSave = () => {\n    if (!gridRef.current) return;\n    const updatedRows = gridRef.current.api.getDisplayedRowCount();\n    for (let i = 0; i < updatedRows; i++) {\n      const rowNode = gridRef.current.api.getDisplayedRowAtIndex(i);\n      const data = rowNode.data;\n      axios.post(\"http://localhost:8000/update_master_row\", data).then((res) => {\n        console.log(\"Masterdatensatz gespeichert:\", res.data);\n      });\n    }\n    alert(\"Masterdaten gespeichert.\");\n  };\n\n  return (\n    <div className=\"ag-theme-alpine\" style={{ height: 600 }}>\n      <h2>Mastertabelle â€“ Bauteile</h2>\n      <AgGridReact\n        ref={gridRef}\n        rowData={rowData}\n        columnDefs={columnDefs}\n        defaultColDef={{ resizable: true, sortable: true, filter: true }}\n      />\n      <button onClick={handleSave} style={{ marginTop: 16 }}>ðŸ’¾ Ã„nderungen speichern</button>\n    </div>\n  );\n};\n\nexport default MasterTable;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAO,sCAAsC;AAC7C,OAAO,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,OAAO,GAAGT,MAAM,CAAC,CAAC;EAExBF,SAAS,CAAC,MAAM;IACdG,KAAK,CAACS,GAAG,CAAC,8BAA8B,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACtDJ,UAAU,CAACI,GAAG,CAACC,IAAI,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAGP,OAAO,CAAC,CAAC,CAAC,GACzBQ,MAAM,CAACC,IAAI,CAACT,OAAO,CAAC,CAAC,CAAC,CAAC,CAACU,GAAG,CAAEC,GAAG,IAAK;IACnC,IAAIA,GAAG,KAAK,UAAU,EAAE;MACtB,OAAO;QAAEC,KAAK,EAAED,GAAG;QAAEE,QAAQ,EAAE;MAAM,CAAC;IACxC;IACA,IAAIF,GAAG,KAAK,mBAAmB,EAAE;MAC/B,OAAO;QACLC,KAAK,EAAED,GAAG;QACVE,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE,oBAAoB;QAChCC,gBAAgB,EAAE;UAChBC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI;QACxB;MACF,CAAC;IACH;IACA,OAAO;MAAEJ,KAAK,EAAED,GAAG;MAAEE,QAAQ,EAAE;IAAK,CAAC;EACvC,CAAC,CAAC,GACF,EAAE;EAEN,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACf,OAAO,CAACgB,OAAO,EAAE;IACtB,MAAMC,WAAW,GAAGjB,OAAO,CAACgB,OAAO,CAACE,GAAG,CAACC,oBAAoB,CAAC,CAAC;IAC9D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,EAAEG,CAAC,EAAE,EAAE;MACpC,MAAMC,OAAO,GAAGrB,OAAO,CAACgB,OAAO,CAACE,GAAG,CAACI,sBAAsB,CAACF,CAAC,CAAC;MAC7D,MAAMhB,IAAI,GAAGiB,OAAO,CAACjB,IAAI;MACzBZ,KAAK,CAAC+B,IAAI,CAAC,yCAAyC,EAAEnB,IAAI,CAAC,CAACF,IAAI,CAAEC,GAAG,IAAK;QACxEqB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEtB,GAAG,CAACC,IAAI,CAAC;MACvD,CAAC,CAAC;IACJ;IACAsB,KAAK,CAAC,0BAA0B,CAAC;EACnC,CAAC;EAED,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,iBAAiB;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAAC,QAAA,gBACtDnC,OAAA;MAAAmC,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCvC,OAAA,CAACF,WAAW;MACV0C,GAAG,EAAEnC,OAAQ;MACbF,OAAO,EAAEA,OAAQ;MACjBO,UAAU,EAAEA,UAAW;MACvB+B,aAAa,EAAE;QAAEC,SAAS,EAAE,IAAI;QAAEC,QAAQ,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACFvC,OAAA;MAAQ6C,OAAO,EAAEzB,UAAW;MAACa,KAAK,EAAE;QAAEa,SAAS,EAAE;MAAG,CAAE;MAAAX,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEV,CAAC;AAACrC,EAAA,CAtDID,WAAW;AAAA8C,EAAA,GAAX9C,WAAW;AAwDjB,eAAeA,WAAW;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}